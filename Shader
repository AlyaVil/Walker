let myShader;
let vs =
`
precision mediump float; 
attribute vec3 aPosition;
attribute float aIndex; 
uniform float uPointSize;
const float TAU = 6.28318;
varying float vStrokeWeight;
varying float vIndex;
uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
void main() {
  vec4 positionVec4 =  vec4(aPosition, 1.0);
  vIndex = aIndex;
  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;
  gl_PointSize = uPointSize;
  vStrokeWeight = uPointSize;
}
`
let fs =
`
precision mediump float;
precision mediump int;
uniform vec4 uMaterialColor;
uniform float uCount;
uniform sampler2D uTex;
const float TAU = 6.28318;
varying float vStrokeWeight;
varying float vIndex;

// getRGB
vec3 getRGB(float h, float s, float b){
    vec3 c = vec3(h, s, b);
    vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0);
    rgb = rgb * rgb * (3.0 - 2.0 * rgb);
    return c.z * mix(vec3(1.0), rgb, c.y);
}

void main(){
  float mask = 0.0;

  // make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)
  // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant

  mask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));

  // if strokeWeight is 1 or less lets just draw a square
  // this prevents weird artifacting from carving circles when our points are really small
  // if strokeWeight is larger than 1, we just use it as is
 mask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));

  // throw away the borders of the mask
  // otherwise we get weird alpha blending issues

  if(mask > 0.98){
    discard;
  }
  vec2 offset = gl_PointCoord.xy * 0.25;
  vec2 tex = vec2(mod(vIndex, 4.0) * 0.25, floor(vIndex / 4.0) * 0.25);
  vec4 col = texture2D(uTex, tex + offset);
  if(col.a < 0.01){ discard; }
  gl_FragColor = col;
}
`
let gr;
let buf; 
let pointBuf1; 
let pointBuf2;

let dummy = new Float32Array(45);

//const W = 720;

// Biological motion walker instance
const bmw = new BMWalker(0);

// gui
let config = {
  sizeFactor: 1,
  speed: 1.0,
  bodyStructure: 0.0,
  weight: 0.0,
  nervousness: 0.0,
  happiness: 0.0,
  dot: true,
  dotSize: 20,
  description: false,
  line: true,
	saver: saver
}

let gui;

function startGUI(){
  gui = new dat.GUI({ width:240 });
